version: "3.6"

services:
  license:
    image: "totvsengpro/license-dev"
    networks:
      - protheus-network
    labels:
      - caddy_0=https://<subdom√≠nio-license>.coolify.stellvick.fun
      - caddy_0.reverse_proxy={{upstreams 5555}}
      - caddy_0.encode=zstd gzip

  postgres-iniciado:
    image: "totvsengpro/postgres-dev:12.1.2210_bra"
    environment:
      - POSTGRES_DB=protheus
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - protheus-network

  dbaccess-postgres:
    image: "totvsengpro/dbaccess-postgres-dev"
    volumes:
      - ./dbaccess.ini:/opt/totvs/dbaccess/multi/dbaccess.ini
    depends_on:
      - postgres-iniciado
      - license
    networks:
      - protheus-network

  appserver:
    image: "totvsengpro/appserver-dev"
    volumes:
      - ./appserver.ini:/opt/totvs/appserver/appserver.ini
      - ./tttm120.rpo:/opt/totvs/protheus/apo/tttm120.rpo
      - ./sx2.unq:/opt/totvs/protheus/protheus_data/systemload/sx2.unq
      - ./sxsbra.txt:/opt/totvs/protheus/protheus_data/systemload/sxsbra.txt
    depends_on:
      - dbaccess-postgres
      - license
    networks:
      - protheus-network
    ports:
      - "1234:1234"
      - "8080:8080"
      - "8081:8081"
      - "9090:9090"
    labels:
      # üåê WebApp principal (porta 8080)
      - caddy_0=https://n8o0g0c4s4oggk8ccogc008k.coolify.stellvick.fun
      - caddy_0.reverse_proxy={{upstreams 8080}}
      - caddy_0.encode=zstd gzip

      # üì° API REST (porta 8081) no mesmo dom√≠nio em /rest/*
      - caddy_0.handle_path=/rest/*
      - caddy_0.reverse_proxy={{upstreams 8081}}

      # üíª SmartClient Web (porta 9090) no mesmo dom√≠nio em /smart/*
      - caddy_0.handle_path=/smart/*
      - caddy_0.reverse_proxy={{upstreams 9090}}

volumes:
  postgres_data:

networks:
  protheus-network:
    driver: bridge
